'use client';

import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { 
  Users, 
  UserPlus, 
  TrendingUp, 
  Gift,
  Search,
  Filter,
  Download
} from 'lucide-react';

export default function ParrainagesPage() {
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');

  // Données statiques pour la démo
  const stats = {
    totalReferrals: 145,
    pendingReferrals: 23,
    completedReferrals: 98,
    totalRewards: 49000,
    conversionRate: 67.6,
    topReferrers: [
      { userId: '1', name: 'Ahmed Benali', referralCount: 12, totalEarned: 6000 },
      { userId: '2', name: 'Fatima Khadra', referralCount: 9, totalEarned: 4500 },
      { userId: '3', name: 'Karim Meziani', referralCount: 7, totalEarned: 3500 },
    ]
  };

  const referrals = [
    {
      id: '1',
      referrerName: 'Ahmed Benali',
      refereeName: 'Mohamed Allal',
      status: 'completed',
      dateCreated: '2025-05-20',
      rewardAmount: 500
    },
    {
      id: '2',
      referrerName: 'Fatima Khadra',
      refereeName: 'Samira Hakim',
      status: 'pending',
      dateCreated: '2025-05-25',
      rewardAmount: 500
    },
    {
      id: '3',
      referrerName: 'Karim Meziani',
      refereeName: 'Rachid Taleb',
      status: 'rewarded',
      dateCreated: '2025-05-15',
      dateCompleted: '2025-05-18',
      rewardAmount: 500
    }
  ];

  // Filtrage des parrainages
  const filteredReferrals = referrals.filter(referral => {
    // Filtrer par statut
    if (statusFilter !== 'all' && referral.status !== statusFilter) return false;
    
    // Filtrer par recherche
    if (searchTerm && !referral.referrerName.toLowerCase().includes(searchTerm.toLowerCase()) &&
        !referral.refereeName.toLowerCase().includes(searchTerm.toLowerCase())) {
      return false;
    }
    
    return true;
  });

  return (
    <div className="space-y-6">
      {/* En-tête de la page */}
      <div>
        <h1 className="text-2xl font-bold text-gray-800">Gestion des Parrainages</h1>
        <p className="text-sm text-gray-500 mt-1">
          Suivez et gérez tous les parrainages et récompenses sur la plateforme
        </p>
      </div>

      {/* Cartes statistiques */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Total des parrainages</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-baseline justify-between">
              <div className="text-3xl font-bold">{stats.totalReferrals}</div>
              <Users className="w-5 h-5 text-blue-500" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Parrainages en attente</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-baseline justify-between">
              <div className="text-3xl font-bold">{stats.pendingReferrals}</div>
              <UserPlus className="w-5 h-5 text-yellow-500" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Récompenses versées</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-baseline justify-between">
              <div className="text-3xl font-bold">{stats.totalRewards} DA</div>
              <Gift className="w-5 h-5 text-green-500" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Taux de conversion</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-baseline justify-between">
              <div className="text-3xl font-bold">{stats.conversionRate}%</div>
              <TrendingUp className="w-5 h-5 text-purple-500" />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Top parrains */}
      <Card>
        <CardHeader>
          <CardTitle>Top parrains</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b">
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Rang</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Nom</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Parrainages</th>
                  <th className="text-right py-3 px-4 font-medium text-gray-500">Gains</th>
                </tr>
              </thead>
              <tbody>
                {stats.topReferrers.map((referrer, index) => (
                  <tr key={referrer.userId} className="border-b hover:bg-gray-50">
                    <td className="py-3 px-4">
                      <Badge className={`
                        ${index === 0 ? 'bg-yellow-500' : 
                          index === 1 ? 'bg-gray-400' : 
                          index === 2 ? 'bg-amber-600' : 'bg-blue-500'}
                      `}>
                        #{index + 1}
                      </Badge>
                    </td>
                    <td className="py-3 px-4 font-medium">{referrer.name}</td>
                    <td className="py-3 px-4">{referrer.referralCount}</td>
                    <td className="py-3 px-4 text-right font-medium">{referrer.totalEarned} DA</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* Liste des parrainages */}
      <Card>
        <CardHeader className="flex flex-col sm:flex-row justify-between sm:items-center pb-2">
          <CardTitle>Liste des parrainages</CardTitle>
          <div className="flex flex-wrap gap-2 mt-2 sm:mt-0">
            <div className="relative">
              <Search className="w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
              <input
                type="text"
                placeholder="Rechercher..."
                className="pl-9 py-2 pr-4 border rounded-md text-sm w-full sm:w-auto"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
            
            <div className="relative">
              <Filter className="w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
              <select 
                className="pl-9 py-2 pr-4 border rounded-md text-sm appearance-none bg-white"
                value={statusFilter}
                onChange={(e) => setStatusFilter(e.target.value)}
              >
                <option value="all">Tous les statuts</option>
                <option value="pending">En attente</option>
                <option value="completed">Complétés</option>
                <option value="rewarded">Récompensés</option>
                <option value="cancelled">Annulés</option>
              </select>
            </div>
            
            <Button variant="outline" className="inline-flex items-center gap-2">
              <Download className="w-4 h-4" /> Exporter
            </Button>
          </div>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b text-sm">
                  <th className="text-left py-3 px-4 font-medium text-gray-500">ID</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Parrain</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Filleul</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Date</th>
                  <th className="text-left py-3 px-4 font-medium text-gray-500">Statut</th>
                  <th className="text-right py-3 px-4 font-medium text-gray-500">Récompense</th>
                  <th className="text-right py-3 px-4 font-medium text-gray-500">Actions</th>
                </tr>
              </thead>
              <tbody>
                {filteredReferrals.map((referral) => (
                  <tr key={referral.id} className="border-b hover:bg-gray-50">
                    <td className="py-3 px-4 text-sm font-mono">#{referral.id}</td>
                    <td className="py-3 px-4">{referral.referrerName}</td>
                    <td className="py-3 px-4">{referral.refereeName}</td>
                    <td className="py-3 px-4 text-sm">{referral.dateCreated}</td>
                    <td className="py-3 px-4">
                      <Badge 
                        className={`
                          ${referral.status === 'completed' ? 'bg-blue-100 text-blue-800' : 
                            referral.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 
                            referral.status === 'rewarded' ? 'bg-green-100 text-green-800' : 
                            'bg-red-100 text-red-800'}
                        `}
                      >
                        {referral.status === 'completed' ? 'Complété' : 
                          referral.status === 'pending' ? 'En attente' : 
                          referral.status === 'rewarded' ? 'Récompensé' : 
                          'Annulé'}
                      </Badge>
                    </td>
                    <td className="py-3 px-4 text-right">{referral.rewardAmount} DA</td>
                    <td className="py-3 px-4 text-right">
                      <Button variant="ghost" size="sm">
                        Voir
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
